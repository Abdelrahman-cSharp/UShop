@model IEnumerable<UShop.Models.Product>
@{
    ViewData["Title"] = "Products";
}

<div class="d-flex justify-content-between align-items-center mb-4">
    <h1>Products</h1>
    <a asp-action="Create" class="btn btn-ushop">
        <i class="fas fa-plus"></i> Create New Product
    </a>
</div>

@if (ViewBag.ErrorMessage != null)
{
    <div class="alert alert-danger">
        @ViewBag.ErrorMessage
    </div>
}

<!-- Search and Filter Form -->
<div class="card mb-4">
    <div class="card-body">
        <form asp-action="Index" method="get" class="row g-3">
            <div class="col-md-4">
                <label for="searchString" class="form-label">Search Products</label>
                <input type="text" name="searchString" class="form-control" value="@ViewData["CurrentFilter"]" placeholder="Search by name..." />
            </div>
            <div class="col-md-3">
                <label for="categoryId" class="form-label">Filter by Category</label>
                <select name="categoryId" class="form-select" asp-items="@ViewBag.Categories">
                    <option value="">All Categories</option>
                </select>
            </div>
            <div class="col-md-2 d-flex align-items-end">
                <input type="submit" value="Filter" class="btn btn-outline-primary w-100" />
            </div>
            <div class="col-md-2 d-flex align-items-end">
                <a asp-action="Index" class="btn btn-outline-secondary w-100">Clear</a>
            </div>
        </form>
    </div>
</div>

<!-- Products Table -->
@if (Model != null && Model.Any())
{
    <div class="card">
        <div class="card-body">
            <div class="table-responsive">
                <table class="table table-striped table-hover">
                    <thead class="table-dark">
                        <tr>
                            <th>@Html.DisplayNameFor(model => model.Name)</th>
                            <th>@Html.DisplayNameFor(model => model.Price)</th>
                            <th>@Html.DisplayNameFor(model => model.StockQuantity)</th>
                            <th>@Html.DisplayNameFor(model => model.Category)</th>
                            <th>@Html.DisplayNameFor(model => model.Seller)</th>
                            <th class="text-center">Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model)
                        {
                            <tr>
                                <td>
                                    <div class="d-flex align-items-center">
                                        @if (!string.IsNullOrEmpty(item.ImageUrl))
                                        {
                                            <img src="@item.ImageUrl" alt="@item.Name" class="rounded me-2" style="width: 40px; height: 40px; object-fit: cover;" />
                                        }
                                        <div>
                                            <strong>@Html.DisplayFor(modelItem => item.Name)</strong>
                                            @if (!string.IsNullOrEmpty(item.Description))
                                            {
                                                <br>

                                                <small class="text-muted">@item.Description.Substring(0, Math.Min(50, item.Description.Length))@(item.Description.Length > 50 ? "..." : "")</small>
                                            }
                                        </div>
                                    </div>
                                </td>
                                <td>
                                    <span class="fw-bold text-success">$@Html.DisplayFor(modelItem => item.Price)</span>
                                </td>
                                <td>
                                    <span class="badge @(item.StockQuantity > 0 ? "bg-success" : "bg-danger")">
                                        @Html.DisplayFor(modelItem => item.StockQuantity)
                                    </span>
                                </td>
                                <td>@Html.DisplayFor(modelItem => item.Category.Name)</td>
                                <td>@Html.DisplayFor(modelItem => item.Seller.FullName)</td>
                                <td class="text-center">
                                    <div class="btn-group" role="group">
                                        <a asp-action="Details" asp-route-id="@item.Id" class="btn btn-outline-info btn-sm" title="View Details">
                                            <i class="fas fa-eye"></i>
                                        </a>
                                        <a asp-action="Edit" asp-route-id="@item.Id" class="btn btn-outline-warning btn-sm" title="Edit">
                                            <i class="fas fa-edit"></i>
                                        </a>
                                        <a asp-action="Delete" asp-route-id="@item.Id" class="btn btn-outline-danger btn-sm" title="Delete">
                                            <i class="fas fa-trash"></i>
                                        </a>
                                    </div>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
}
else
{
    <div class="card">
        <div class="card-body text-center">
            <i class="fas fa-box-open fa-3x text-muted mb-3"></i>
            <h5>No Products Found</h5>
            <p class="text-muted">There are no products matching your search criteria.</p>
            <a asp-action="Create" class="btn btn-ushop">Create First Product</a>
        </div>
    </div>
}

<!-- Add Font Awesome for icons -->
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" />