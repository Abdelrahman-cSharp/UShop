@model IEnumerable<UShop.Models.Product>
@{
    ViewData["Title"] = "Products by " + ViewBag.SellerName;
}

<style>
    * {
        margin: 0;
        padding: 0;
        box-sizing: border-box;
    }

    body {
        font-family: 'Inter', 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        background: linear-gradient(135deg, #f5f7fa 0%, #e4eaf5 100%);
        min-height: 100vh;
        color: #333;
    }

    .seller-hero {
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        padding: 3rem 0;
        color: white;
        position: relative;
        overflow: hidden;
        text-align: center;
    }

    .seller-hero::before {
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background: url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 100 20"><defs><radialGradient id="a"><stop offset="20%" stop-color="%23fff" stop-opacity="0.1"/><stop offset="100%" stop-color="%23fff" stop-opacity="0"/></radialGradient></defs><circle fill="url(%23a)" cx="10" cy="10" r="10"/></svg>') repeat;
        animation: float 20s ease-in-out infinite;
    }

    @@keyframes float {
        0%, 100% {
            transform: translateY(0px);
        }
        50% {
            transform: translateY(-10px);
        }
    }

    .seller-info {
        position: relative;
        z-index: 2;
    }

    .seller-avatar {
        width: 80px;
        height: 80px;
        border-radius: 50%;
        margin: 0 auto 1rem;
        background: rgba(255, 255, 255, 0.2);
        display: flex;
        align-items: center;
        justify-content: center;
        font-size: 2rem;
        border: 3px solid rgba(255, 255, 255, 0.3);
    }

    .seller-title {
        font-size: 2.5rem;
        font-weight: 700;
        margin-bottom: 0.5rem;
        text-shadow: 0 4px 20px rgba(0,0,0,0.3);
    }

    .seller-stats {
        display: flex;
        justify-content: center;
        gap: 1.5rem;
        font-size: 1.1rem;
        opacity: 0.9;
    }

    .product-count, .rating-badge {
        display: flex;
        align-items: center;
        gap: 0.3rem;
        background: rgba(255, 255, 255, 0.2);
        padding: 0.3rem 0.8rem;
        border-radius: 20px;
        backdrop-filter: blur(10px);
    }

    .products-container {
        padding: 3rem 0;
    }

    .products-grid {
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(280px, 1fr));
        gap: 2rem;
        max-width: 1200px;
        margin: 0 auto;
        padding: 0 1rem;
    }

    .product-card {
        background: white;
        border-radius: 16px;
        overflow: hidden;
        box-shadow: 0 8px 25px rgba(0, 0, 0, 0.08);
        transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
        position: relative;
        cursor: pointer;
        border: 1px solid #f1f3f4;
        animation: fadeInUp 0.6s ease-out forwards;
        opacity: 0;
        transform: translateY(30px);
    }

    @@keyframes fadeInUp {
        to {
            opacity: 1;
            transform: translateY(0);
        }
    }

    .product-card:hover {
        transform: translateY(-8px);
        box-shadow: 0 20px 40px rgba(0, 0, 0, 0.12);
    }

    .product-image-container {
        position: relative;
        height: 200px;
        overflow: hidden;
        background: #f8f9fa;
    }

    .product-image {
        width: 100%;
        height: 100%;
        object-fit: cover;
        transition: transform 0.3s ease;
    }

    .product-card:hover .product-image {
        transform: scale(1.05);
    }

    .product-badges {
        position: absolute;
        top: 12px;
        right: 12px;
        z-index: 2;
    }

    .badge {
        display: inline-block;
        padding: 4px 12px;
        border-radius: 20px;
        font-size: 0.75rem;
        font-weight: 600;
        text-transform: uppercase;
        letter-spacing: 0.5px;
        margin-left: 6px;
    }

    .badge-seller {
        background: linear-gradient(135deg, #667eea, #764ba2);
        color: white;
    }

    .badge-category {
        background: #4ecdc4;
        color: white;
    }

    .product-actions-top {
        position: absolute;
        top: 12px;
        left: 12px;
        z-index: 2;
        display: flex;
        flex-direction: column;
        gap: 0.5rem;
    }

    .action-btn {
        width: 40px;
        height: 40px;
        border-radius: 50%;
        border: none;
        background: white;
        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
        cursor: pointer;
        transition: all 0.3s ease;
        display: flex;
        align-items: center;
        justify-content: center;
        opacity: 0;
        transform: scale(0.8);
    }

    .product-card:hover .action-btn {
        opacity: 1;
        transform: scale(1);
    }

    .action-btn:hover {
        background: #667eea;
        color: white;
        transform: scale(1.1);
    }

    .product-info {
        padding: 1.5rem;
    }

    .product-category {
        display: inline-block;
        color: #8b5cf6;
        font-size: 0.75rem;
        font-weight: 600;
        text-transform: uppercase;
        letter-spacing: 1px;
        margin-bottom: 0.5rem;
    }

    .product-name {
        font-size: 1.1rem;
        font-weight: 600;
        color: #1f2937;
        margin-bottom: 0.75rem;
        line-height: 1.4;
        height: 2.8rem;
        overflow: hidden;
        display: -webkit-box;
        -webkit-line-clamp: 2;
        -webkit-box-orient: vertical;
    }

    .product-rating {
        display: flex;
        align-items: center;
        margin-bottom: 0.75rem;
        gap: 0.25rem;
    }

    .star {
        color: #fbbf24;
        font-size: 0.875rem;
    }

    .rating-text {
        margin-left: 0.5rem;
        font-size: 0.875rem;
        color: #6b7280;
    }

    .product-pricing {
        display: flex;
        align-items: center;
        gap: 0.75rem;
        margin-bottom: 1rem;
    }

    .current-price {
        font-size: 1.5rem;
        font-weight: 700;
        color: #667eea;
    }

    .product-actions {
        display: flex;
        gap: 0.75rem;
    }

    .btn-add-cart {
        flex: 1;
        background: #667eea;
        color: white;
        border: none;
        padding: 12px 24px;
        border-radius: 8px;
        font-weight: 600;
        font-size: 0.875rem;
        cursor: pointer;
        transition: all 0.3s ease;
        display: flex;
        align-items: center;
        justify-content: center;
        gap: 0.5rem;
    }

    .btn-add-cart:hover {
        background: #5a67d8;
        transform: translateY(-2px);
        box-shadow: 0 8px 20px rgba(102, 126, 234, 0.3);
    }

    .btn-view-details {
        flex: 1;
        background: transparent;
        color: #667eea;
        border: 2px solid #667eea;
        padding: 12px 24px;
        border-radius: 8px;
        font-weight: 600;
        font-size: 0.875rem;
        cursor: pointer;
        transition: all 0.3s ease;
        text-decoration: none;
        display: flex;
        align-items: center;
        justify-content: center;
        gap: 0.5rem;
    }

    .btn-view-details:hover {
        background: #667eea;
        color: white;
        transform: translateY(-2px);
        text-decoration: none;
    }

    .product-overlay {
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background: rgba(102, 126, 234, 0.9);
        opacity: 0;
        transition: all 0.3s ease;
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;
        z-index: 10;
        pointer-events: none;
    }

    .product-card:hover .product-overlay {
        opacity: 1;
        pointer-events: all;
    }

    .overlay-actions {
        display: flex;
        flex-direction: column;
        gap: 1rem;
        align-items: center;
    }

    .overlay-btn {
        background: white;
        color: #667eea;
        border: none;
        padding: 12px 30px;
        border-radius: 25px;
        font-weight: 600;
        cursor: pointer;
        transition: all 0.3s ease;
        text-decoration: none;
        display: flex;
        align-items: center;
        gap: 0.5rem;
        min-width: 150px;
        justify-content: center;
    }

    .overlay-btn:hover {
        background: #667eea;
        color: white;
        transform: translateY(-2px);
        text-decoration: none;
    }

    .toast-container {
        position: fixed;
        top: 20px;
        right: 20px;
        z-index: 10000;
    }

    .toast {
        background: white;
        color: #333;
        padding: 1rem 2rem;
        border-radius: 8px;
        box-shadow: 0 10px 40px rgba(0,0,0,0.2);
        display: flex;
        align-items: center;
        gap: 1rem;
        animation: slideInRight 0.3s ease;
        margin-bottom: 1rem;
    }

    .toast-success {
        border-left: 4px solid #4CAF50;
    }

    .toast-error {
        border-left: 4px solid #f44336;
    }

    @@keyframes slideInRight {
        from { transform: translateX(100%); opacity: 0; }
        to { transform: translateX(0); opacity: 1; }
    }

    @@media (max-width: 768px) {
        .seller-title { font-size: 2rem; }
        .seller-stats {
            flex-direction: column;
            gap: 0.5rem;
        }
        .products-grid {
            grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));
            gap: 1.5rem;
        }
        .product-actions {
            flex-direction: column;
        }
    }
</style>

<div class="seller-hero">
    <div class="container">
        <div class="seller-info">
            <div class="seller-avatar">
                <span>@ViewBag.SellerName[0]</span>
            </div>
            <h1 class="seller-title">Products by @ViewBag.SellerName</h1>
            <div class="seller-stats">
                <span class="product-count">📦 @Model.Count() products</span>
                <span class="rating-badge">⭐ Top Seller</span>
            </div>
        </div>
    </div>
</div>

<div class="products-container">
    <div class="products-grid">
        @{int cardIndex = 0;}
        @foreach (var product in Model)
        {
            <div class="product-card" style="animation-delay: @(cardIndex * 0.1)s">
                <div class="product-image-container">
                    <img src="@(string.IsNullOrEmpty(product.ImageUrl) ? "/images/placeholder.png" : product.ImageUrl)"
                         class="product-image" alt="@product.Name" />
                    
                    <div class="product-badges">
                        <span class="badge badge-seller">@ViewBag.SellerName</span>
                        <span class="badge badge-category">@(product.Category?.Name ?? "General")</span>
                    </div>

                    <div class="product-actions-top">
                        <button class="action-btn" onclick="toggleFavorite(event, @product.Id)">
                            <i class="fas fa-heart"></i>
                        </button>
                        <button class="action-btn" onclick="quickView(@product.Id)">
                            <i class="fas fa-eye"></i>
                        </button>
                    </div>

                    <div class="product-overlay">
                        <div class="overlay-actions">
                            <a asp-controller="Product" asp-action="Details" asp-route-id="@product.Id" 
                               class="overlay-btn">
                                <i class="fas fa-eye"></i>
                                View Details
                            </a>
                            <button class="overlay-btn" onclick="addToCart(@product.Id)">
                                <i class="fas fa-shopping-cart"></i>
                                Add to Cart
                            </button>
                        </div>
                    </div>
                </div>
                
                <div class="product-info">
                    <h3 class="product-name">@product.Name</h3>
                    
                    <div class="product-rating">
                        @for (int i = 1; i <= 5; i++)
                        {
                            <span class="star">★</span>
                        }
                        <span class="rating-text">(4.2)</span>
                    </div>
                    
                    <div class="product-pricing">
                        <span class="current-price">$@product.Price</span>
                    </div>
                    
                    <div class="product-actions">
                        <button class="btn-add-cart" onclick="addToCart(@product.Id)">
                            <i class="fas fa-shopping-cart"></i>
                            Add to Cart
                        </button>
                        <a asp-controller="Product" asp-action="Details" asp-route-id="@product.Id" 
                           class="btn-view-details">
                            View Details
                        </a>
                    </div>
                </div>
            </div>
            cardIndex++;
        }
    </div>
</div>

<!-- Toast Container -->
<div class="toast-container" id="toastContainer"></div>

<script src="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/js/all.min.js"></script>
<script>
    // Add to cart functionality
    function addToCart(productId) {
        // إرسال طلب AJAX لإضافة المنتج للسلة
        fetch('/Cart/AddToCart', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
                'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]')?.value
            },
            body: JSON.stringify({ productId: productId, quantity: 1 })
        })
        .then(response => response.json())
        .then(data => {
            if (data.success) {
                // عرض رسالة نجاح
                showNotification('Product added to cart successfully!', 'success');
            } else {
                showNotification('Failed to add product to cart', 'error');
            }
        })
        .catch(error => {
            console.error('Error:', error);
            showNotification('An error occurred', 'error');
        });
    }

    // Toggle favorite functionality
    function toggleFavorite(event, productId) {
        event.stopPropagation();
        const btn = event.currentTarget;
        const icon = btn.querySelector('i');
        
        // تبديل اللون للمحاكاة فقط (بدون API)
        if (btn.classList.contains('active')) {
            btn.classList.remove('active');
            btn.style.background = 'white';
            btn.style.color = '';
            showNotification('Removed from favorites', 'success');
        } else {
            btn.classList.add('active');
            btn.style.background = '#ff6b6b';
            btn.style.color = 'white';
            showNotification('Added to favorites', 'success');
        }
    }

    // Quick view functionality
    function quickView(productId) {
        // افتح صفحة التفاصيل بدلاً من العرض السريع
        window.location.href = `/Product/Details/${productId}`;
    }

    // إشعارات
    function showNotification(message, type) {
        const toastContainer = document.getElementById('toastContainer');
        const toast = document.createElement('div');
        toast.className = `toast toast-${type}`;
        
        const icon = type === 'success' ? '✅' : '❌';
        toast.innerHTML = `
            <span class="toast-icon">${icon}</span>
            <span class="toast-message">${message}</span>
        `;
        
        toastContainer.appendChild(toast);
        
        setTimeout(() => {
            toast.style.opacity = '0';
            toast.style.transform = 'translateX(100%)';
            setTimeout(() => {
                toast.remove();
            }, 300);
        }, 3000);
    }

    // تطبيق الأنيميشن عند التحميل
    document.addEventListener('DOMContentLoaded', function() {
        const cards = document.querySelectorAll('.product-card');
        
        const observer = new IntersectionObserver((entries) => {
            entries.forEach(entry => {
                if (entry.isIntersecting) {
                    entry.target.style.animation = 'fadeInUp 0.6s ease-out forwards';
                    observer.unobserve(entry.target);
                }
            });
        }, { threshold: 0.1 });
        
        cards.forEach(card => {
            observer.observe(card);
        });
    });
</script>