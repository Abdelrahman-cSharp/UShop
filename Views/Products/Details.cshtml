@model UShop.Models.Product
@{
	ViewData["Title"] = Model.Name + " - Product Details";
}

<style>
	* {
		margin: 0;
		padding: 0;
		box-sizing: border-box;
	}

	body {
		font-family: 'Inter', 'Segoe UI', system-ui, sans-serif;
		background: #fafbfc;
		line-height: 1.6;
	}

	.breadcrumb-modern {
		background: white;
		padding: 1rem 0;
		border-bottom: 1px solid #e5e7eb;
		margin-bottom: 0;
	}

		.breadcrumb-modern .breadcrumb {
			margin-bottom: 0;
			background: none;
			padding: 0;
		}

		.breadcrumb-modern .breadcrumb-item + .breadcrumb-item::before {
			content: "›";
			color: #9ca3af;
			font-weight: 600;
		}

		.breadcrumb-modern a {
			color: #6b7280;
			text-decoration: none;
			transition: color 0.2s ease;
		}

			.breadcrumb-modern a:hover {
				color: #667eea;
			}

	.product-gallery {
		position: relative;
		background: white;
		border-radius: 16px;
		overflow: hidden;
		box-shadow: 0 4px 20px rgba(0, 0, 0, 0.08);
	}

	.main-image-container {
		position: relative;
		height: 500px;
		overflow: hidden;
	}

	.main-image {
		width: 100%;
		height: 100%;
		object-fit: cover;
		transition: transform 0.5s ease;
		cursor: zoom-in;
	}

		.main-image:hover {
			transform: scale(1.1);
		}

	.image-badges {
		position: absolute;
		top: 1rem;
		left: 1rem;
		z-index: 10;
		display: flex;
		gap: 0.5rem;
	}

	.badge-custom {
		padding: 0.5rem 1rem;
		border-radius: 20px;
		font-size: 0.8rem;
		font-weight: 600;
		text-transform: uppercase;
		letter-spacing: 0.5px;
	}

	.badge-stock {
		background: linear-gradient(135deg, #10b981, #059669);
		color: white;
	}

	.badge-out-of-stock {
		background: linear-gradient(135deg, #ef4444, #dc2626);
		color: white;
	}

	.badge-low-stock {
		background: linear-gradient(135deg, #f59e0b, #d97706);
		color: white;
	}

	.favorite-btn {
		position: absolute;
		top: 1rem;
		right: 1rem;
		width: 50px;
		height: 50px;
		border: none;
		background: rgba(255, 255, 255, 0.9);
		backdrop-filter: blur(10px);
		border-radius: 50%;
		cursor: pointer;
		transition: all 0.3s ease;
		display: flex;
		align-items: center;
		justify-content: center;
		z-index: 10;
	}

		.favorite-btn:hover {
			background: #667eea;
			color: white;
			transform: scale(1.1);
		}

		.favorite-btn.active {
			background: #ef4444;
			color: white;
		}

	.thumbnails {
		display: flex;
		gap: 1rem;
		padding: 1rem;
		background: #f8f9fa;
	}

	.thumbnail {
		width: 80px;
		height: 80px;
		border-radius: 8px;
		cursor: pointer;
		transition: all 0.3s ease;
		border: 3px solid transparent;
		object-fit: cover;
	}

		.thumbnail:hover,
		.thumbnail.active {
			border-color: #667eea;
			transform: scale(1.05);
		}

	.product-info {
		background: white;
		border-radius: 16px;
		padding: 2rem;
		box-shadow: 0 4px 20px rgba(0, 0, 0, 0.08);
		height: fit-content;
	}

	.product-title {
		font-size: 2.5rem;
		font-weight: 700;
		color: #1f2937;
		margin-bottom: 1rem;
		line-height: 1.2;
	}

	.product-rating {
		display: flex;
		align-items: center;
		gap: 1rem;
		margin-bottom: 1.5rem;
	}

	.stars {
		display: flex;
		gap: 2px;
	}

	.star {
		color: #fbbf24;
		font-size: 1.2rem;
	}

		.star.empty {
			color: #d1d5db;
		}

	.rating-info {
		display: flex;
		align-items: center;
		gap: 0.5rem;
		color: #6b7280;
		font-size: 0.95rem;
	}

	.price-section {
		background: linear-gradient(135deg, #667eea, #764ba2);
		padding: 1.5rem;
		border-radius: 12px;
		margin-bottom: 2rem;
		color: white;
	}

	.current-price {
		font-size: 2.5rem;
		font-weight: 800;
		margin-bottom: 0.5rem;
		display: block;
	}

	.price-note {
		font-size: 0.9rem;
		opacity: 0.9;
	}

	.product-description {
		font-size: 1.1rem;
		color: #4b5563;
		line-height: 1.7;
		margin-bottom: 2rem;
		padding: 1.5rem;
		background: #f9fafb;
		border-radius: 8px;
		border-left: 4px solid #667eea;
	}

	.product-meta {
		display: grid;
		grid-template-columns: 1fr 1fr;
		gap: 2rem;
		margin-bottom: 2rem;
		padding: 1.5rem;
		background: #f8fafc;
		border-radius: 12px;
	}

	.meta-item {
		display: flex;
		align-items: center;
		gap: 1rem;
	}

	.meta-icon {
		width: 40px;
		height: 40px;
		background: linear-gradient(135deg, #667eea, #764ba2);
		border-radius: 10px;
		display: flex;
		align-items: center;
		justify-content: center;
		color: white;
		font-size: 1.1rem;
	}

	.meta-text {
		flex: 1;
	}

	.meta-label {
		font-size: 0.9rem;
		color: #6b7280;
		margin-bottom: 0.25rem;
	}

	.meta-value {
		font-weight: 600;
		color: #1f2937;
	}

	.quantity-selector {
		display: flex;
		align-items: center;
		gap: 1rem;
		margin-bottom: 2rem;
	}

	.quantity-label {
		font-weight: 600;
		color: #374151;
		font-size: 1.1rem;
	}

	.quantity-controls {
		display: flex;
		align-items: center;
		border: 2px solid #e5e7eb;
		border-radius: 8px;
		overflow: hidden;
	}

	.quantity-btn {
		width: 40px;
		height: 40px;
		border: none;
		background: #f3f4f6;
		cursor: pointer;
		display: flex;
		align-items: center;
		justify-content: center;
		transition: all 0.2s ease;
		font-weight: 600;
	}

		.quantity-btn:hover {
			background: #667eea;
			color: white;
		}

	.quantity-input {
		width: 60px;
		height: 40px;
		border: none;
		text-align: center;
		font-weight: 600;
		background: white;
	}

	.action-buttons {
		display: flex;
		gap: 1rem;
		margin-bottom: 2rem;
	}

	.btn-primary-custom {
		flex: 2;
		background: linear-gradient(135deg, #667eea, #764ba2);
		border: none;
		color: white;
		padding: 1rem 2rem;
		border-radius: 12px;
		font-weight: 600;
		font-size: 1.1rem;
		cursor: pointer;
		transition: all 0.3s ease;
		display: flex;
		align-items: center;
		justify-content: center;
		gap: 0.5rem;
	}

		.btn-primary-custom:hover {
			transform: translateY(-2px);
			box-shadow: 0 10px 25px rgba(102, 126, 234, 0.3);
		}

	.btn-secondary-custom {
		flex: 1;
		background: transparent;
		border: 2px solid #667eea;
		color: #667eea;
		padding: 1rem 2rem;
		border-radius: 12px;
		font-weight: 600;
		font-size: 1.1rem;
		cursor: pointer;
		transition: all 0.3s ease;
		display: flex;
		align-items: center;
		justify-content: center;
		gap: 0.5rem;
	}

		.btn-secondary-custom:hover {
			background: #667eea;
			color: white;
			transform: translateY(-2px);
		}

	.btn-disabled {
		background: #9ca3af !important;
		cursor: not-allowed !important;
		transform: none !important;
	}

	.features-list {
		list-style: none;
		padding: 1.5rem;
		background: #f0fdf4;
		border-radius: 12px;
		border: 1px solid #bbf7d0;
	}

		.features-list li {
			display: flex;
			align-items: center;
			gap: 1rem;
			padding: 0.75rem 0;
			color: #065f46;
			font-weight: 500;
		}

		.features-list i {
			color: #059669;
			font-size: 1.1rem;
		}

	.related-products {
		background: white;
		border-radius: 16px;
		padding: 2rem;
		box-shadow: 0 4px 20px rgba(0, 0, 0, 0.08);
		margin-top: 3rem;
	}

	.section-title {
		font-size: 2rem;
		font-weight: 700;
		color: #1f2937;
		margin-bottom: 2rem;
		position: relative;
		padding-bottom: 1rem;
	}

		.section-title::after {
			content: '';
			position: absolute;
			bottom: 0;
			left: 0;
			width: 60px;
			height: 4px;
			background: linear-gradient(135deg, #667eea, #764ba2);
			border-radius: 2px;
		}

	.related-grid {
		display: grid;
		grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));
		gap: 2rem;
	}

	.related-card {
		background: white;
		border-radius: 12px;
		overflow: hidden;
		box-shadow: 0 4px 15px rgba(0, 0, 0, 0.08);
		transition: all 0.3s ease;
		cursor: pointer;
	}

		.related-card:hover {
			transform: translateY(-5px);
			box-shadow: 0 10px 30px rgba(0, 0, 0, 0.15);
		}

		.related-card img {
			width: 100%;
			height: 200px;
			object-fit: cover;
		}

	.related-card-body {
		padding: 1.5rem;
	}

	.related-card-title {
		font-weight: 600;
		color: #1f2937;
		margin-bottom: 0.5rem;
	}

	.related-card-price {
		font-size: 1.2rem;
		font-weight: 700;
		color: #667eea;
	}

	.notification {
		position: fixed;
		top: 20px;
		right: 20px;
		padding: 1rem 2rem;
		border-radius: 8px;
		color: white;
		font-weight: 600;
		z-index: 1000;
		animation: slideInRight 0.3s ease;
	}

		.notification.success {
			background: linear-gradient(135deg, #10b981, #059669);
		}

		.notification.error {
			background: linear-gradient(135deg, #ef4444, #dc2626);
		}

	@@keyframes slideInRight {
		from {
			transform: translateX(100%);
			opacity: 0;
		}

		to {
			transform: translateX(0);
			opacity: 1;
		}
	}

	.zoom-overlay {
		position: fixed;
		top: 0;
		left: 0;
		right: 0;
		bottom: 0;
		background: rgba(0, 0, 0, 0.9);
		z-index: 1000;
		display: none;
		align-items: center;
		justify-content: center;
		cursor: zoom-out;
	}

	.zoom-image {
		max-width: 90%;
		max-height: 90%;
		object-fit: contain;
	}

	@@media (max-width: 768px) {
		.product-title {
			font-size: 2rem;
		}

		.current-price {
			font-size: 2rem;
		}

		.action-buttons {
			flex-direction: column;
		}

		.product-meta {
			grid-template-columns: 1fr;
			gap: 1rem;
		}

		.quantity-selector {
			justify-content: center;
		}
	}
</style>


<div class="container my-5">
	<div class="row g-5">
		<!-- Product Gallery -->
		<div class="col-lg-6">
			<div class="product-gallery">
				<div class="main-image-container">
					<img id="mainImage"
						 src="@(string.IsNullOrEmpty(Model.ImageUrl) ? "/images/placeholder.png" : Model.ImageUrl)"
						 class="main-image" alt="@Model.Name" onclick="zoomImage(this)" />

					<!-- Badges -->
					<div class="image-badges">
						@if (Model.StockQuantity > 0)
						{
							@if (Model.StockQuantity <= 5)
							{
								<span class="badge-custom badge-low-stock">Only @Model.StockQuantity Left</span>
							}
							else
							{
								<span class="badge-custom badge-stock">In Stock</span>
							}
						}
						else
						{
							<span class="badge-custom badge-out-of-stock">Out of Stock</span>
						}
					</div>

					<!-- Favorite Button -->
					<button class="favorite-btn" onclick="toggleFavorite(@Model.Id)">
						<i class="fas fa-heart"></i>
					</button>
				</div>

				<!-- Thumbnails -->
				<div class="thumbnails">
					<img src="@(string.IsNullOrEmpty(Model.ImageUrl) ? "/images/placeholder.png" : Model.ImageUrl)"
						 class="thumbnail active" onclick="swapImage(this)" alt="@Model.Name">
					<!-- يمكن إضافة صور إضافية هنا -->
				</div>
			</div>
		</div>

		<!-- Product Info -->
		<div class="col-lg-6">
			<div class="product-info">
				<h1 class="product-title">@Model.Name</h1>

				<!-- Rating -->
				<div class="product-rating">
					<div class="stars">
						@for (int i = 1; i <= 5; i++)
						{
							<span class="star @(i <= 4 ? "" : "empty")">★</span>
						}
					</div>
					<div class="rating-info">
						<span>4.2 out of 5</span>
						<span>•</span>
						<span>120 reviews</span>
					</div>
				</div>

				<!-- Price -->
				<div class="price-section">
					<span class="current-price">$@Model.Price.ToString("F2")</span>
					<span class="price-note">VAT included • Free shipping</span>
				</div>

				<!-- Description -->
				@if (!string.IsNullOrEmpty(Model.Description))
				{
					<div class="product-description">
						<strong>About this item:</strong><br>
						@Model.Description
					</div>
				}

				<!-- Product Meta -->
				<div class="product-meta">
					<div class="meta-item">
						<div class="meta-icon">
							<i class="fas fa-store"></i>
						</div>
						<div class="meta-text">
							<div class="meta-label">Sold by</div>
							<div class="meta-value">
								<a asp-controller="Products" asp-action="Shopping" asp-route-sellerId="@Model.SellerId"
								   class="text-decoration-none" style="color: #667eea;">
									@(Model.Seller?.FullName ?? "UShop Store")
								</a>
							</div>
						</div>
					</div>
					<div class="meta-item">
						<div class="meta-icon">
							<i class="fas fa-tag"></i>
						</div>
						<div class="meta-text">
							<div class="meta-label">Category</div>
							@* <div class="meta-value">@(Model.Category?.Name ?? "General")</div>
							<div class="meta-label">Category</div> *@
							<div class="meta-value">
								<a asp-controller="Products" asp-action="Shopping" asp-route-categoryid="@Model.CategoryId"
								   class="text-decoration-none" style="color: #667eea;">
									@(Model.Category?.Name ?? "General")
								</a>
							</div>
						</div>
					</div>
				</div>

				<!-- Quantity Selector -->
				<div class="quantity-selector">
					<label class="quantity-label">Quantity:</label>
					<div class="quantity-controls">
						<button class="quantity-btn" onclick="decreaseQuantity()" type="button">−</button>
						<input id="qty" type="number" class="quantity-input" value="1"
							   min="1" max="@(Model.StockQuantity > 0 ? Model.StockQuantity : 1)" readonly>
						<button class="quantity-btn" onclick="increaseQuantity()" type="button">+</button>
					</div>
				</div>

				<!-- Action Buttons -->
				<div class="action-buttons">
					<form asp-controller="Cart" asp-action="AddToCart" 
						  asp-route-productid="@Model.Id" asp-route-quantity="quantity" method="post" class="d-contents">
						@Html.AntiForgeryToken()
						<input type="hidden" name="productId" value="@Model.Id" />
						<input type="hidden" name="quantity" id="hiddenQty" value="1" />
						<button type="submit" class="btn-primary-custom @(Model.StockQuantity == 0 ? "btn-disabled" : "")"
								@(Model.StockQuantity == 0 ? "disabled" : "")>
							<i class="fas fa-shopping-cart"></i>
							@(Model.StockQuantity == 0 ? "Out of Stock" : "Add to Cart")
						</button>
					</form>

					<form asp-controller="Checkout" asp-action="Start" method="post" class="d-contents">
						@Html.AntiForgeryToken()
						<input type="hidden" name="productId" value="@Model.Id" />
						<input type="hidden" name="quantity" id="hiddenQty2" value="1" />
						<button type="submit" class="btn-secondary-custom @(Model.StockQuantity == 0 ? "btn-disabled" : "")"
								@(Model.StockQuantity == 0 ? "disabled" : "")>
							<i class="fas fa-bolt"></i>
							Buy Now
						</button>
					</form>
				</div>

				<!-- Features -->
				<ul class="features-list">
					<li><i class="fas fa-shipping-fast"></i> Free shipping worldwide</li>
					<li><i class="fas fa-undo"></i> 14-day easy returns</li>
					<li><i class="fas fa-shield-alt"></i> Secure payment guaranteed</li>
					<li><i class="fas fa-headset"></i> 24/7 customer support</li>
				</ul>
			</div>
		</div>
	</div>

	<!-- Related Products -->
	<div class="related-products">
		<h2 class="section-title">You might also like</h2>
		<div class="related-grid">
			<!-- Sample related products - يمكن استبدالها ببيانات حقيقية -->
			<div class="related-card">
				<img src="/images/placeholder.png" alt="Related Product">
				<div class="related-card-body">
					<h6 class="related-card-title">Similar Product</h6>
					<div class="related-card-price">$29.99</div>
				</div>
			</div>

			<div class="related-card">
				<img src="/images/placeholder.png" alt="Related Product">
				<div class="related-card-body">
					<h6 class="related-card-title">Related Item</h6>
					<div class="related-card-price">$45.00</div>
				</div>
			</div>

			<div class="related-card">
				<img src="/images/placeholder.png" alt="Related Product">
				<div class="related-card-body">
					<h6 class="related-card-title">Best Seller</h6>
					<div class="related-card-price">$39.99</div>
				</div>
			</div>

			<div class="related-card">
				<img src="/images/placeholder.png" alt="Related Product">
				<div class="related-card-body">
					<h6 class="related-card-title">Top Rated</h6>
					<div class="related-card-price">$52.00</div>
				</div>
			</div>
		</div>
	</div>
</div>

<!-- Zoom Overlay -->
<div class="zoom-overlay" id="zoomOverlay" onclick="closeZoom()">
	<img class="zoom-image" id="zoomImage" alt="Zoomed product">
</div>

<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" />

<script>
	// Quantity controls
	const qtyInput = document.getElementById('qty');
	const hiddenQty = document.getElementById('hiddenQty');
	const hiddenQty2 = document.getElementById('hiddenQty2');
	const maxStock = @Model.StockQuantity;

	function syncQty() {
		hiddenQty.value = qtyInput.value;
		hiddenQty2.value = qtyInput.value;
	}

	function increaseQuantity() {
		const current = parseInt(qtyInput.value);
		if (current < maxStock) {
			qtyInput.value = current + 1;
			syncQty();
		}
	}

	function decreaseQuantity() {
		const current = parseInt(qtyInput.value);
		if (current > 1) {
			qtyInput.value = current - 1;
			syncQty();
		}
	}

	qtyInput.addEventListener('input', syncQty);
	syncQty();

	// Image swap functionality
	function swapImage(img) {
		document.getElementById('mainImage').src = img.src;
		document.querySelectorAll('.thumbnail').forEach(t => t.classList.remove('active'));
		img.classList.add('active');
	}

	// Image zoom functionality
	function zoomImage(img) {
		document.getElementById('zoomImage').src = img.src;
		document.getElementById('zoomOverlay').style.display = 'flex';
		document.body.style.overflow = 'hidden';
	}

	function closeZoom() {
		document.getElementById('zoomOverlay').style.display = 'none';
		document.body.style.overflow = 'auto';
	}

	// Favorite toggle
	function toggleFavorite(productId) {
		const btn = event.currentTarget;
		const icon = btn.querySelector('i');

		fetch('/Favorites/Toggle', {
			method: 'POST',
			headers: {
				'Content-Type': 'application/json',
				'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]').value
			},
			body: JSON.stringify({ productId: productId })
		})
		.then(response => response.json())
		.then(data => {
			if (data.success) {
				btn.classList.toggle('active');
				showNotification(
					data.isFavorite ? 'Added to favorites!' : 'Removed from favorites!',
					'success'
				);
			}
		})
		.catch(error => {
			console.error('Error:', error);
			showNotification('An error occurred', 'error');
		});
	}

	// Notification system
	function showNotification(message, type) {
		const notification = document.createElement('div');
		notification.className = `notification ${type}`;
		notification.textContent = message;

		document.body.appendChild(notification);

		setTimeout(() => {
			notification.style.animation = 'slideInRight 0.3s ease reverse';
			setTimeout(() => notification.remove(), 300);
		}, 3000);
	}

	// Form submission with notification
	document.querySelectorAll('form').forEach(form => {
		form.addEventListener('submit', function(e) {
			if (this.querySelector('button:disabled')) {
				e.preventDefault();
				showNotification('This product is currently out of stock', 'error');
				return;
			}

			if (this.action.includes('Cart')) {
				showNotification('Product added to cart!', 'success');
			}
		});
	});

	// Keyboard shortcuts
	document.addEventListener('keydown', function(e) {
		if (e.key === 'Escape') {
			closeZoom();
		}
		if (e.key === '+' || e.key === '=') {
			e.preventDefault();
			increaseQuantity();
		}
		if (e.key === '-') {
			e.preventDefault();
			decreaseQuantity();
		}
	});

	// Smooth scrolling for related products
	document.addEventListener('DOMContentLoaded', function() {
		const relatedCards = document.querySelectorAll('.related-card');
		relatedCards.forEach((card, index) => {
			card.style.animationDelay = `${index * 0.1}s`;
			card.style.animation = 'fadeInUp 0.6s ease-out forwards';
			card.style.opacity = '0';
			card.style.transform = 'translateY(20px)';
		});
	});

	// Add CSS animation
	const style = document.createElement('style');
	style.textContent = `
		@@keyframes fadeInUp {
			to {
				opacity: 1;
				transform: translateY(0);
			}
		}
		.d-contents { display: contents !important; }
	`;
	document.head.appendChild(style);
</script>

@section Scripts {
	<script>
		// Additional page-specific JavaScript can go here
		console.log('Product Details Page Loaded Successfully');
	</script>
}