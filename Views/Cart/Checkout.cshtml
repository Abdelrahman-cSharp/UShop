@model UShop.Models.Order

<h2 class="mb-4">Checkout</h2>

<!-- Customer Info -->
<div class="card shadow-sm p-3 mb-4">
	<h4>Customer Info</h4>
	<p><strong>@Model.Customer.FullName</strong></p>
	<p>@Model.Customer.Email</p>
	<p>@Model.Customer.PhoneNumber</p>
	<p>@Model.Customer.Address</p>
</div>

<!-- Order Items -->
<div class="card shadow-sm p-3 mb-4">
	<h4>Order Items</h4>
	<table class="table table-striped">
		<thead>
			<tr>
				<th>Product</th>
				<th>Qty</th>
				<th>Price</th>
				<th>Total</th>
			</tr>
		</thead>
		<tbody>
			@foreach (var item in Model.Items)
			{
				<tr>
					<td>@item.Product?.Name</td>
					<td>@item.Quantity</td>
					<td>@item.UnitPrice.ToString("C")</td>
					<td>@item.TotalPrice.ToString("C")</td>
				</tr>
			}
		</tbody>
	</table>
	<p class="fw-bold text-end">Total: @Model.TotalAmount.ToString("C")</p>
</div>

<!-- Payment Method -->
<div class="card shadow-sm p-3">
	<h4>Payment Method</h4>
	<form asp-controller="Orders" asp-action="Create" method="post">
		<input type="hidden" asp-for="CustomerId" />

		<!-- Payment Method Select -->
		<div class="mb-3">
			<select asp-for="PaymentMethod" class="form-control" id="paymentMethod">
				<option value="CashOnDelivery">Cash on Delivery</option>
				<option value="CreditCards">Credit Card</option>
			</select>
		</div>

		<!-- Credit Card Section -->
		<div id="CreditCardsSection" style="display:none;">
			@foreach (var CreditCard in Model.Customer.CreditCards)
			{
				@if (CreditCard != null)
				{
					<div class="mb-3">
						<label class="form-label">Saved Card</label>
						<select class="form-control" name="UseSavedCard" id="useSavedCard">
							<option value="true">
								**** **** **** @CreditCard.CardNumber.Substring(CreditCard.CardNumber.Length - 4)
								(exp: @CreditCard.ExpiryMonth/@CreditCard.ExpiryYear)
							</option>
							<option value="false">Use a new card</option>
						</select>
					</div>
				}
			}
		</div>

		<button type="submit" class="btn btn-success w-100 mt-3">Confirm Order</button>
	</form>
</div>

@section Scripts {
	<script>
		const paymentMethod = document.getElementById("paymentMethod");
		const CreditCardsSection = document.getElementById("CreditCardsSection");
		const useSavedCard = document.getElementById("useSavedCard");
		const newCardForm = document.getElementById("newCardForm");

		function togglePaymentMethod() {
				CreditCardsSection.style.display = paymentMethod.value === "CreditCards" ? "block" : "none";
		}

		function toggleNewCardForm() {
				if (useSavedCard && useSavedCard.value === "false") {
						newCardForm.style.display = "block";
						// Clear the fields whenever "New Card" is selected
						newCardForm.querySelectorAll('input').forEach(input => input.value = '');
				} else {
						newCardForm.style.display = "none";
				}
		}

		paymentMethod.addEventListener("change", togglePaymentMethod);
		if (useSavedCard) useSavedCard.addEventListener("change", toggleNewCardForm);

		// Initial setup
		togglePaymentMethod();
		toggleNewCardForm();

		// Client-side validation
		document.getElementById('checkoutForm').addEventListener('submit', function(e) {
				if (paymentMethod.value === "CreditCards") {
						let useNew = !useSavedCard || useSavedCard.value === "false";
						if (useNew) {
								const cardNumber = document.getElementById("CardNumber").value.trim();
								const cardHolder = document.getElementById("CardHolder").value.trim();
								const expiryMonth = document.getElementById("ExpiryMonth").value.trim();
								const expiryYear = document.getElementById("ExpiryYear").value.trim();
								const cvv = document.getElementById("CVV").value.trim();

								if (!cardNumber || !cardHolder || !expiryMonth || !expiryYear || !cvv) {
										e.preventDefault();
										alert("Please fill in all credit card fields.");
								}
						}
				}
		});
	</script>
}
